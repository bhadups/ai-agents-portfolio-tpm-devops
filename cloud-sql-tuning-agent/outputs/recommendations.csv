Area,Issue,Recommendation,Priority,Rationale
Storage,Storage >90% used (452GB/500GB),Increase storage or clean old data; enable autoscaling if supported.,High,"Running out of storage can cause the database to become read-only, leading to application downtime."
Instance,High CPU utilization (82.3%),Consider scaling up instance type (more vCPU) or investigate top CPU-consuming queries.,High,High CPU utilization can lead to slow performance and potential downtime.
Query,"Slow query (4000 ms): SELECT o.id, o.date, c.name FROM orders o JOIN customers c ON o.customer_id = c.id WHERE o.status='pending';","Consider adding appropriate indexes, avoid SELECT *, and break large joins. Inspect query plan (EXPLAIN).",High,Slow queries can lead to poor application performance and user experience.
Query,Slow query (2500 ms): SELECT * FROM orders WHERE customer_id = 123;,"Consider adding appropriate indexes, avoid SELECT *, and break large joins. Inspect query plan (EXPLAIN).",High,Slow queries can lead to poor application performance and user experience.
Connections,Active connections high (285/300),Introduce connection pooling (PgBouncer/Cloud SQL Proxy) and check for connection leaks.,Medium,High number of active connections can lead to connection exhaustion and application downtime.
Query,Moderately slow query (1800 ms): UPDATE inventory SET stock = stock - 1 WHERE item_id = 5678;,"Review query plan, check indexes, and consider limiting returned columns.",Medium,Moderately slow queries can still impact application performance and user experience.
Query,Moderately slow query (1500 ms): SELECT * FROM sessions WHERE updated_at > '2025-09-25';,"Review query plan, check indexes, and consider limiting returned columns.",Medium,Moderately slow queries can still impact application performance and user experience.
